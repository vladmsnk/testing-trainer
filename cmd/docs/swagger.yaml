definitions:
  auth.LoginRequest:
    properties:
      password:
        example: securepassword
        type: string
      username:
        example: john_doe
        type: string
    type: object
  auth.LogoutRequest:
    properties:
      access_token:
        type: string
    type: object
  auth.RefreshTokenRequest:
    properties:
      refresh_token:
        example: refresh_token
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: securepassword
        type: string
      username:
        example: john_doe
        type: string
    type: object
  habit.CreateHabitRequest:
    properties:
      description:
        example: Drink 2 liters of water every day
        type: string
      goal:
        $ref: '#/definitions/habit.Goal'
    type: object
  habit.Goal:
    properties:
      frequency_type:
        description: daily, weekly, monthly
        enum:
        - daily
        - weekly
        - monthly
        example: daily
        type: string
      id:
        example: 1
        type: integer
      times_per_frequency:
        description: How many times to complete within each frequency (e.g., per day
          or per week)
        example: 1
        type: integer
      total_tracking_periods:
        description: How many periods to track the habit
        example: 15
        type: integer
    type: object
  habit.ListUserHabitsResponse:
    properties:
      habits:
        items:
          $ref: '#/definitions/habit.ResponseHabit'
        type: array
      username:
        example: john_doe
        type: string
    type: object
  habit.ResponseHabit:
    properties:
      description:
        example: Drink 2 liters of water every day
        type: string
      goal:
        $ref: '#/definitions/habit.Goal'
      id:
        example: 1
        type: integer
    type: object
  habit.UpdateHabitRequest:
    properties:
      description:
        example: Drink 2 liters of water every day
        type: string
      goal:
        $ref: '#/definitions/habit.Goal'
      id:
        example: 1
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates users and provides a token
      parameters:
      - description: Login user
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: login endpoint
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out users from the system
      parameters:
      - description: Logout
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/auth.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: logout endpoint
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the authentication token
      parameters:
      - description: Refresh token
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New JWT Token
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: refresh token endpoint
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers users in the system
      parameters:
      - description: Register user
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "409":
          description: User already exists
          schema:
            type: string
      summary: register endpoint
      tags:
      - auth
  /time/current-time:
    get:
      consumes:
      - application/json
      description: Returns the current time
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get current time endpoint
      tags:
      - time
  /time/next-day:
    post:
      consumes:
      - application/json
      description: Switches to the next day
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: switch to next day endpoint
      tags:
      - time
  /time/reset-time:
    put:
      consumes:
      - application/json
      description: Resets the time to the current day
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: reset time to current day endpoint
      tags:
      - time
  /tracker/habits:
    get:
      consumes:
      - application/json
      description: Lists all habits for the authenticated user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user habits
          schema:
            items:
              $ref: '#/definitions/habit.ListUserHabitsResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: list user habits endpoint
      tags:
      - habit
    post:
      consumes:
      - application/json
      description: Creates habit in the system
      parameters:
      - description: Create habit
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/habit.CreateHabitRequest'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: create habit endpoint
      tags:
      - habit
    put:
      consumes:
      - application/json
      description: Updates a habit for the authenticated user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update habit
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/habit.UpdateHabitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Habit updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: update habit endpoint
      tags:
      - habit
  /tracker/habits/{habitId}:
    delete:
      consumes:
      - application/json
      description: Deletes a habit for the authenticated user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Habit ID
        in: path
        name: habitId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Habit deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: delete habit endpoint
      tags:
      - habit
  /tracker/habits/completed:
    get:
      consumes:
      - application/json
      description: Lists all completed habits for the authenticated user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of completed user habits
          schema:
            items:
              $ref: '#/definitions/habit.ListUserHabitsResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: list users completed habits endpoint
      tags:
      - habit
  /tracker/progress/{habitId}:
    get:
      consumes:
      - application/json
      description: Get progress of the habit
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Habit ID
        in: path
        name: habitId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get progress endpoint
      tags:
      - progress
    post:
      consumes:
      - application/json
      description: Adds progress to the habit
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Habit ID
        in: path
        name: habitId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: add progress endpoint
      tags:
      - progress
  /tracker/reminder:
    get:
      consumes:
      - application/json
      description: Get reminder for the user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get reminder endpoint
      tags:
      - progress
  /version:
    get:
      consumes:
      - application/json
      description: Get the current version of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get API version
      tags:
      - version
swagger: "2.0"
